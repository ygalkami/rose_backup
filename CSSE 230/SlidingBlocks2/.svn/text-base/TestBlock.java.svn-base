import java.awt.geom.Point2D;


public class TestBlock {
	
	public TestBlock(PreviousConfig array, Block current) {
//		System.out.println(array.configuration.length);
		findmoves(current, array);
	}
	
	public boolean findmoves(Block current, PreviousConfig config) {
		int row = current.row;
		int col = current.col;
		int width = current.width;
		int height = current.height;
		int relativeWidth = col + width;
		int moveleft = 0; int moveright = 0; int moveup = 0; int movedown = 0;
		System.out.println(config.configuration.length);
		for (Block a : config.configuration) {
			if (a != null && a.equals(current) == false) {
				for (int i = row; i < row + height; i++) {
					for (int j = col; j < col + width; j++) {
						System.out.println(i + " " + (j + 1));
						if (a.contains(new Point2D.Double(i, (j + 1))) || (j + width) > 3) {
							moveright++;
						}
						
						if (a.contains(new Point2D.Double(i, (j - 1))) || (j - 1) < 0) {
							moveleft++;
						}
						
						if (a.contains(new Point2D.Double((i + 1), j)) || (i + height) >= 2) {
							movedown++;
						}
						
						if (a.contains(new Point2D.Double((i - 1), j)) || (i - 1) < 0) {
							moveup++;
						}
					}
				}
			}
		}
		
		System.out.println(moveright + " " + moveleft + " " + movedown + " " + moveup + " " + current);
		
//		if (moveright == numblocks - 1)
//			currentconfig.getFirst().moves.add(new Move(row, col, row, col + 1, current));
//		if (moveleft == numblocks - 1)
//			currentconfig.getFirst().moves.add(new Move(row, col, row, col - 1, current));
//		if (movedown == numblocks - 1)
//			currentconfig.getFirst().moves.add(new Move(row, col, row + 1, col, current));
//		if (moveup == numblocks - 1)
//			currentconfig.getFirst().moves.add(new Move(row, col, row - 1, col, current));
//		System.out.println("Find Moves End: " + System.currentTimeMillis());
		return true;
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
//		Block a = new Block(2, 0, 3, 0);
//		System.out.println(a.contains(new Point2D.Double(3, 0)));
//		System.out.println(a.contains(new Point2D.Double(0, 0)));
//		System.out.println(a.contains(new Point2D.Double(1, 1)));
//		System.out.println(a.contains(new Point2D.Double(0, 1)));
//		System.out.println(a.contains(new Point2D.Double(1, 0)));
//		System.out.println(a.contains(new Point2D.Double(2, 2)));
		Block b = new Block(1, 1, 2, 0);
//		if (b.equals(a)) 
//			System.out.println("They are equal");
//		for (Point2D.Double point : b.allpoints) {
//			if (a.contains(point))
//				System.out.println("true");
//		}
//		System.out.println(a);
//		a.MoveDown();
//		System.out.println(a);
		
		Block[] array = new Block[4];
		array[0] = new Block(1, 2, 1, 0);
		array[1] = new Block(1, 1, 0, 1);

		PreviousConfig config = new PreviousConfig(array);
		for (int i = 0; i < 2; i++) {
			TestBlock test = new TestBlock(config, array[i]);
		}
	}

}
